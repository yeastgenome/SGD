/* Alias */
DROP TRIGGER ALIAS_TRIGGER;
--/
CREATE TRIGGER ALIAS_TRIGGER
BEFORE INSERT ON alias
FOR EACH ROW
BEGIN
SELECT alias_seq.nextval INTO :new.alias_id FROM DUAL;
END;
/

DROP TRIGGER EXPERIMENTALIAS_ADR_TRIGGER;
--/
CREATE TRIGGER EXPERIMENTALIAS_ADR_TRIGGER
AFTER DELETE ON EXPERIMENTALIAS
FOR EACH ROW
BEGIN
DELETE FROM alias WHERE alias_id = :old.alias_id;
END;
/

DROP TRIGGER CHEMICALALIAS_ADR_TRIGGER;
--/
CREATE TRIGGER CHEMICALALIAS_ADR_TRIGGER
AFTER DELETE ON CHEMICALALIAS
FOR EACH ROW
BEGIN
DELETE FROM alias WHERE alias_id = :old.alias_id;
END;
/

DROP TRIGGER BIOCONCEPTALIAS_ADR_TRIGGER;
--/
CREATE TRIGGER BIOCONCEPTALIAS_ADR_TRIGGER
AFTER DELETE ON BIOCONCEPTALIAS
FOR EACH ROW
BEGIN
DELETE FROM alias WHERE alias_id = :old.alias_id;
END;
/

DROP TRIGGER BIOENTITYALIAS_ADR_TRIGGER;
--/
CREATE TRIGGER BIOENTITYALIAS_ADR_TRIGGER
AFTER DELETE ON BIOENTITYALIAS
FOR EACH ROW
BEGIN
DELETE FROM alias WHERE alias_id = :old.alias_id;
END;
/

DROP TRIGGER REFERENCEALIAS_ADR_TRIGGER;
--/
CREATE TRIGGER REFERENCEALIAS_ADR_TRIGGER
AFTER DELETE ON REFERENCEALIAS
FOR EACH ROW
BEGIN
DELETE FROM alias WHERE alias_id = :old.alias_id;
END;
/

/* URL */
DROP TRIGGER URL_TRIGGER;
--/
CREATE TRIGGER URL_TRIGGER
BEFORE INSERT ON url
FOR EACH ROW
BEGIN
SELECT url_seq.nextval INTO :new.url_id FROM DUAL;
END;
/

DROP TRIGGER BIOCONCEPTURL_ADR_TRIGGER;
--/
CREATE TRIGGER BIOCONCEPTURL_ADR_TRIGGER
AFTER DELETE ON BIOCONCEPTURL
FOR EACH ROW
BEGIN
DELETE FROM url WHERE url_id = :old.url_id;
END;
/

DROP TRIGGER BIOENTITYURL_ADR_TRIGGER;
--/
CREATE TRIGGER BIOENTITYURL_ADR_TRIGGER
AFTER DELETE ON BIOENTITYURL
FOR EACH ROW
BEGIN
DELETE FROM url WHERE url_id = :old.url_id;
END;
/

DROP TRIGGER REFERENCEURL_ADR_TRIGGER;
--/
CREATE TRIGGER REFERENCEURL_ADR_TRIGGER
AFTER DELETE ON REFERENCEURL
FOR EACH ROW
BEGIN
DELETE FROM url WHERE url_id = :old.url_id;
END;
/

/* Relation */
DROP TRIGGER RELATION_TRIGGER;
--/
CREATE TRIGGER RELATION_TRIGGER
BEFORE INSERT ON relation
FOR EACH ROW
BEGIN
SELECT relation_seq.nextval INTO :new.relation_id FROM DUAL;
END;
/

DROP TRIGGER BIOCONCEPTREL_ADR_TRIGGER;
--/
CREATE TRIGGER BIOCONCEPTREL_ADR_TRIGGER
AFTER DELETE ON BIOCONCEPTRELATION
FOR EACH ROW
BEGIN
DELETE FROM relation WHERE relation_id = :old.relation_id;
END;
/

DROP TRIGGER BIOENTITYREL_ADR_TRIGGER;
--/
CREATE TRIGGER BIOENTITYREL_ADR_TRIGGER
AFTER DELETE ON BIOENTITYRELATION
FOR EACH ROW
BEGIN
DELETE FROM relation WHERE relation_id = :old.relation_id;
END;
/

DROP TRIGGER CHEMICALREL_ADR_TRIGGER;
--/
CREATE TRIGGER CHEMICALREL_ADR_TRIGGER
AFTER DELETE ON CHEMICALRELATION
FOR EACH ROW
BEGIN
DELETE FROM relation WHERE relation_id = :old.relation_id;
END;
/

DROP TRIGGER EXPERIMENTREL_ADR_TRIGGER;
--/
CREATE TRIGGER EXPERIMENTREL_ADR_TRIGGER
AFTER DELETE ON EXPERIMENTRELATION
FOR EACH ROW
BEGIN
DELETE FROM relation WHERE relation_id = :old.relation_id;
END;
/

DROP TRIGGER REFERENCEREL_ADR_TRIGGER;
--/
CREATE TRIGGER REFERENCEREL_ADR_TRIGGER
AFTER DELETE ON REFERENCERELATION
FOR EACH ROW
BEGIN
DELETE FROM relation WHERE relation_id = :old.relation_id;
END;
/

/* Paragraph */
DROP TRIGGER PARA_TRIGGER;
--/
CREATE TRIGGER PARA_TRIGGER
BEFORE INSERT ON paragraph
FOR EACH ROW
BEGIN
SELECT para_seq.nextval INTO :new.paragraph_id FROM DUAL;
END;
/

DROP TRIGGER PARAREF_TRIGGER;
--/
CREATE TRIGGER PARAREF_TRIGGER
BEFORE INSERT ON paragraph_reference
FOR EACH ROW
BEGIN
SELECT pararef_seq.nextval INTO :new.paragraph_reference_id FROM DUAL;
END;
/

/* Evelements */
DROP TRIGGER SOURCE_TRIGGER;
--/
CREATE TRIGGER SOURCE_TRIGGER
BEFORE INSERT ON source
FOR EACH ROW
BEGIN
SELECT source_seq.nextval INTO :new.source_id FROM DUAL;
END;
/

DROP TRIGGER STRAIN_TRIGGER;
--/
CREATE TRIGGER STRAIN_TRIGGER
BEFORE INSERT ON strain
FOR EACH ROW
BEGIN
SELECT strain_seq.nextval INTO :new.strain_id FROM DUAL;
END;
/

DROP TRIGGER EXPERIMENT_TRIGGER;
--/
CREATE TRIGGER EXPERIMENT_TRIGGER
BEFORE INSERT ON experiment
FOR EACH ROW
BEGIN
SELECT experiment_seq.nextval INTO :new.experiment_id FROM DUAL;
END;
/

/* Evidence */
DROP TRIGGER EVIDENCE_TRIGGER;
--/
CREATE TRIGGER EVIDENCE_TRIGGER
BEFORE INSERT ON evidence
FOR EACH ROW
BEGIN
SELECT evidence_seq.nextval INTO :new.evidence_id FROM DUAL;
END;
/

DROP TRIGGER BINDINGEV_ADR_TRIGGER;
--/
CREATE TRIGGER BINDINGEV_ADR_TRIGGER
AFTER DELETE ON BINDINGEVIDENCE
FOR EACH ROW
BEGIN
DELETE FROM evidence WHERE evidence_id = :old.evidence_id;
END;
/

DROP TRIGGER GENINTERACTIONEV_ADR_TRIGGER;
--/
CREATE TRIGGER GENINTERACTIONEV_ADR_TRIGGER
AFTER DELETE ON GENINTERACTIONEVIDENCE
FOR EACH ROW
BEGIN
DELETE FROM evidence WHERE evidence_id = :old.evidence_id;
END;
/

DROP TRIGGER GOEV_ADR_TRIGGER;
--/
CREATE TRIGGER GOEV_ADR_TRIGGER
AFTER DELETE ON GOEVIDENCE
FOR EACH ROW
BEGIN
DELETE FROM evidence WHERE evidence_id = :old.evidence_id;
END;
/

DROP TRIGGER LITERATUREEV_ADR_TRIGGER;
--/
CREATE TRIGGER LITERATUREEV_ADR_TRIGGER
AFTER DELETE ON LITERATUREEVIDENCE
FOR EACH ROW
BEGIN
DELETE FROM evidence WHERE evidence_id = :old.evidence_id;
END;
/

DROP TRIGGER PDOMAINEV_ADR_TRIGGER;
--/
CREATE TRIGGER PDOMAINEV_ADR_TRIGGER
AFTER DELETE ON PDOMAINEVIDENCE
FOR EACH ROW
BEGIN
DELETE FROM evidence WHERE evidence_id = :old.evidence_id;
END;
/

DROP TRIGGER PHENOTYPEEV_ADR_TRIGGER;
--/
CREATE TRIGGER PHENOTYPEEV_ADR_TRIGGER
AFTER DELETE ON PHENOTYPEEVIDENCE
FOR EACH ROW
BEGIN
DELETE FROM evidence WHERE evidence_id = :old.evidence_id;
END;
/

DROP TRIGGER PHYSINTERACTIONEV_ADR_TRIGGER;
--/
CREATE TRIGGER PHYSINTERACTIONEV_ADR_TRIGGER
AFTER DELETE ON PHYSINTERACTIONEVIDENCE
FOR EACH ROW
BEGIN
DELETE FROM evidence WHERE evidence_id = :old.evidence_id;
END;
/

DROP TRIGGER QUALIFIEREV_ADR_TRIGGER;
--/
CREATE TRIGGER QUALIFIEREV_ADR_TRIGGER
AFTER DELETE ON QUALIFIEREVIDENCE
FOR EACH ROW
BEGIN
DELETE FROM evidence WHERE evidence_id = :old.evidence_id;
END;
/

DROP TRIGGER REGULATIONEV_ADR_TRIGGER;
--/
CREATE TRIGGER REGULATIONEV_ADR_TRIGGER
AFTER DELETE ON REGULATIONEVIDENCE
FOR EACH ROW
BEGIN
DELETE FROM evidence WHERE evidence_id = :old.evidence_id;
END;
/

/* Condition */
DROP TRIGGER CONDITION_TRIGGER;
--/
CREATE TRIGGER CONDITION_TRIGGER
BEFORE INSERT ON condition
FOR EACH ROW
BEGIN
SELECT cond_seq.nextval INTO :new.condition_id FROM DUAL;
END;
/

DROP TRIGGER CHEMICALCOND_ADR_TRIGGER;
--/
CREATE TRIGGER CHEMICALCOND_ADR_TRIGGER
AFTER DELETE ON CHEMICALCONDITION
FOR EACH ROW
BEGIN
DELETE FROM condition WHERE condition_id = :old.condition_id;
END;
/

DROP TRIGGER TEMPERATURECOND_ADR_TRIGGER;
--/
CREATE TRIGGER TEMPERATURECOND_ADR_TRIGGER
AFTER DELETE ON TEMPERATURECONDITION
FOR EACH ROW
BEGIN
DELETE FROM condition WHERE condition_id = :old.condition_id;
END;
/

DROP TRIGGER BIOENTITYCOND_ADR_TRIGGER;
--/
CREATE TRIGGER BIOENTITYCOND_ADR_TRIGGER
AFTER DELETE ON BIOENTITYCONDITION
FOR EACH ROW
BEGIN
DELETE FROM condition WHERE condition_id = :old.condition_id;
END;
/

DROP TRIGGER BIOCONCEPTCOND_ADR_TRIGGER;
--/
CREATE TRIGGER BIOCONCEPTCOND_ADR_TRIGGER
AFTER DELETE ON BIOCONCEPTCONDITION
FOR EACH ROW
BEGIN
DELETE FROM condition WHERE condition_id = :old.condition_id;
END;
/

DROP TRIGGER BIOITEMCOND_ADR_TRIGGER;
--/
CREATE TRIGGER BIOITEMCOND_ADR_TRIGGER
AFTER DELETE ON BIOITEMCONDITION
FOR EACH ROW
BEGIN
DELETE FROM condition WHERE condition_id = :old.condition_id;
END;
/

/* Bioentity */
DROP TRIGGER LOCUSBIOENT_ADR_TRIGGER;
--/
CREATE TRIGGER LOCUSBIOENT_ADR_TRIGGER
AFTER DELETE ON LOCUSBIOENTITY
FOR EACH ROW
BEGIN
DELETE FROM bioentity WHERE bioentity_id = :old.bioentity_id;
END;
/

DROP TRIGGER PROTEINBIOENT_ADR_TRIGGER;
--/
CREATE TRIGGER PROTEINBIOENT_ADR_TRIGGER
AFTER DELETE ON PROTEINBIOENTITY
FOR EACH ROW
BEGIN
DELETE FROM bioentity WHERE bioentity_id = :old.bioentity_id;
END;
/

/* Bioitem */
DROP TRIGGER BIOITEM_TRIGGER;
--/
CREATE TRIGGER BIOITEM_TRIGGER
BEFORE INSERT ON bioitem
FOR EACH ROW
BEGIN
SELECT bioitem_seq.nextval INTO :new.bioitem_id FROM DUAL;
END;
/

DROP TRIGGER DOMAINBIOITEM_ADR_TRIGGER;
--/
CREATE TRIGGER DOMAINBIOITEM_ADR_TRIGGER
AFTER DELETE ON DOMAINBIOITEM
FOR EACH ROW
BEGIN
DELETE FROM bioitem WHERE bioitem_id = :old.bioitem_id;
END;
/

/* Bioconcept */
DROP TRIGGER BIOCONCEPT_TRIGGER;
--/
CREATE TRIGGER BIOCONCEPT_TRIGGER
BEFORE INSERT ON bioconcept
FOR EACH ROW
BEGIN
SELECT bioconcept_seq.nextval INTO :new.bioconcept_id FROM DUAL;
END;
/

DROP TRIGGER GOBIOCON_ADR_TRIGGER;
--/
CREATE TRIGGER GOBIOCON_ADR_TRIGGER
AFTER DELETE ON GOBIOCONCEPT
FOR EACH ROW
BEGIN
DELETE FROM bioconcept WHERE bioconcept_id = :old.bioconcept_id;
END;
/

DROP TRIGGER PHENOTYPEBIOCON_ADR_TRIGGER;
--/
CREATE TRIGGER PHENOTYPEBIOCON_ADR_TRIGGER
AFTER DELETE ON PHENOTYPEBIOCONCEPT
FOR EACH ROW
BEGIN
DELETE FROM bioconcept WHERE bioconcept_id = :old.bioconcept_id;
END;
/

/* Auxilliary */
DROP TRIGGER AUX_BIOENT_REF_TRIGGER;
--/
CREATE TRIGGER AUX_BIOENT_REF_TRIGGER
BEFORE INSERT ON aux_bioentity_reference
FOR EACH ROW
BEGIN
SELECT aux_bioentity_reference_seq.nextval INTO :new.aux_bioentity_reference_id FROM DUAL;
END;
/

DROP TRIGGER AUX_BIOFACT_TRIGGER;
--/
CREATE TRIGGER AUX_BIOFACT_TRIGGER
BEFORE INSERT ON aux_biofact
FOR EACH ROW
BEGIN
SELECT aux_biofact_seq.nextval INTO :new.aux_biofact_id FROM DUAL;
END;
/

DROP TRIGGER DISAMBIG_TRIGGER;
--/
CREATE TRIGGER DISAMBIG_TRIGGER
BEFORE INSERT ON aux_disambig
FOR EACH ROW
BEGIN
SELECT aux_disambig_seq.nextval INTO :new.aux_disambig_id FROM DUAL;
END;
/

/* Chemical */

DROP TRIGGER CHEM_TRIGGER;
--/
CREATE TRIGGER CHEM_TRIGGER
BEFORE INSERT ON chemical
FOR EACH ROW
BEGIN
SELECT chem_seq.nextval INTO :new.chemical_id FROM DUAL;
END;
/







