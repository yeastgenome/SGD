/* Misc */
DROP TABLE ALIAS;
CREATE TABLE ALIAS ( ALIAS_ID INTEGER NOT NULL, DISPLAY_NAME VARCHAR2(1200), CLASS VARCHAR2(25), CATEGORY VARCHAR2(100), SOURCE VARCHAR2(40), DATE_CREATED DATE, CREATED_BY VARCHAR2(25), CONSTRAINT ALIAS_PK PRIMARY KEY (ALIAS_ID) ) TABLESPACE DATA1;
DROP SEQUENCE ALIAS_SEQ;
CREATE SEQUENCE ALIAS_SEQ;
DROP TRIGGER ALIAS_TRIGGER;
--/
CREATE TRIGGER ALIAS_TRIGGER
BEFORE INSERT ON alias
FOR EACH ROW
BEGIN
SELECT alias_seq.nextval INTO :new.alias_id FROM DUAL;
END;
/

DROP TABLE URL;
CREATE TABLE URL ( URL_ID INTEGER NOT NULL, DISPLAY_NAME VARCHAR2(500), CLASS VARCHAR2(40), URL VARCHAR2(500), CATEGORY VARCHAR2(100), SOURCE VARCHAR2(40), DATE_CREATED DATE, CREATED_BY VARCHAR2(15), CONSTRAINT URL_PK PRIMARY KEY (URL_ID) ) TABLESPACE DATA2;
DROP SEQUENCE URL_SEQ;
CREATE SEQUENCE URL_SEQ;
DROP TRIGGER URL_TRIGGER;
--/
CREATE TRIGGER URL_TRIGGER
BEFORE INSERT ON url
FOR EACH ROW
BEGIN
SELECT url_seq.nextval INTO :new.url_id FROM DUAL;
END;
/

DROP TABLE PARAGRAPH;
CREATE TABLE PARAGRAPH ( PARAGRAPH_ID INTEGER NOT NULL, BIOENTITY_ID INTEGER, CLASS VARCHAR2(50), TEXT CLOB, DATE_CREATED DATE, CREATED_BY VARCHAR2(25), CONSTRAINT PARAGRAPH_PK PRIMARY KEY (PARAGRAPH_ID) ) TABLESPACE DATA2;
ALTER TABLE PARAGRAPH ADD CONSTRAINT PAR_BIOENT_FK FOREIGN KEY (BIOENTITY_ID) REFERENCES BIOENTITY (BIOENTITY_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;
DROP SEQUENCE PAR_SEQ;
CREATE SEQUENCE PAR_SEQ;
DROP TRIGGER PAR_TRIGGER;
--/
CREATE TRIGGER PAR_TRIGGER
BEFORE INSERT ON paragraph
FOR EACH ROW
BEGIN
SELECT par_seq.nextval INTO :new.paragraph_id FROM DUAL;
END;
/

DROP TABLE PARAGRAPH_REFERENCE;
CREATE TABLE PARAGRAPH_REFERENCE ( PARAGRAPH_REFERENCE_ID INTEGER NOT NULL, PARAGRAPH_ID INTEGER NOT NULL, REFERENCE_ID INTEGER NOT NULL, CLASS VARCHAR2(40), CONSTRAINT PARAGRAPH_REFERENCE_PK PRIMARY KEY (PARAGRAPH_REFERENCE_ID), CONSTRAINT PARAGRAPH_REFERENCE_UK UNIQUE (PARAGRAPH_ID, REFERENCE_ID) ) TABLESPACE DATA1;
ALTER TABLE PARAGRAPH_REFERENCE ADD CONSTRAINT PARREF_PAR_FK FOREIGN KEY (PARAGRAPH_ID) REFERENCES PARAGRAPH (PARAGRAPH_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;
ALTER TABLE PARAGRAPH_REFERENCE ADD CONSTRAINT PARREF_REF_FK FOREIGN KEY (REFERENCE_ID) REFERENCES REFERENCE (REFERENCE_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;
DROP SEQUENCE PARREF_SEQ;
CREATE SEQUENCE PARREF_SEQ;
DROP TRIGGER PARREF_TRIGGER;
--/
CREATE TRIGGER PARREF_TRIGGER
BEFORE INSERT ON paragraph_reference
FOR EACH ROW
BEGIN
SELECT parref_seq.nextval INTO :new.paragraph_reference_id FROM DUAL;
END;
/

DROP TABLE AUX_BIOENTITYTABS;
CREATE TABLE AUX_BIOENTITYTABS ( BIOENTITY_ID INTEGER NOT NULL, SUMMARY NUMBER(1), HISTORY NUMBER(1), LITERATURE NUMBER(1), GO NUMBER(1), PHENOTYPE NUMBER(1), INTERACTIONS NUMBER(1), EXPRESSION NUMBER(1), REGULATION NUMBER(1), PROTEIN NUMBER(1), WIKI NUMBER(1), CONSTRAINT AUX_BIOENTITYTABS_PK PRIMARY KEY (BIOENTITY_ID) ) TABLESPACE DATA1;

/* Reference */

DROP TABLE BOOK;
CREATE TABLE BOOK ( BOOK_ID INTEGER NOT NULL, TITLE VARCHAR2(400), VOLUME_TITLE VARCHAR2(400), ISBN VARCHAR2(20), TOTAL_PAGES INTEGER, PUBLISHER VARCHAR2(100), PUBLISHER_LOCATION VARCHAR2(100), DATE_CREATED DATE, CREATED_BY VARCHAR2(12), CONSTRAINT BOOK_PK PRIMARY KEY (BOOK_ID), CONSTRAINT BOOK_UK UNIQUE (VOLUME_TITLE, TITLE) ) TABLESPACE DATA1;

DROP TABLE JOURNAL;
CREATE TABLE JOURNAL ( JOURNAL_ID INTEGER NOT NULL, FULL_NAME VARCHAR2(200), ABBREVIATION VARCHAR2(140), ISSN VARCHAR2(20), ESSN VARCHAR2(20), PUBLISHER VARCHAR2(100), DATE_CREATED DATE, CREATED_BY VARCHAR2(12), CONSTRAINT JOURNAL_PK PRIMARY KEY (JOURNAL_ID), CONSTRAINT JOURNAL_UK UNIQUE (ABBREVIATION, FULL_NAME) ) TABLESPACE DATA1;

DROP TABLE REFERENCE;
CREATE TABLE REFERENCE ( REFERENCE_ID INTEGER NOT NULL, FORMAT_NAME VARCHAR2(150), DISPLAY_NAME VARCHAR2(150), STATUS VARCHAR2(40), PDF_STATUS VARCHAR2(40), CITATION VARCHAR2(480), YEAR INTEGER, PUBMED_ID INTEGER, PUBMED_CENTRAL_ID INTEGER, DATE_PUBLISHED VARCHAR2(50), DATE_REVISED INTEGER, ISSUE VARCHAR2(40), PAGE VARCHAR2(40), VOLUME VARCHAR2(50), TITLE VARCHAR2(400), JOURNAL_ID INTEGER, BOOK_ID INTEGER, DOI VARCHAR2(100), OBJ_LINK VARCHAR2(100), SOURCE VARCHAR2(50), DATE_CREATED DATE, CREATED_BY VARCHAR2(15), CONSTRAINT REFERENCE_PK PRIMARY KEY (REFERENCE_ID) ) TABLESPACE DATA1;
CREATE INDEX REFERENCE_FK2 ON REFERENCE (BOOK_ID);
CREATE INDEX REFERENCE_FK1 ON REFERENCE (JOURNAL_ID);
ALTER TABLE REFERENCE ADD CONSTRAINT REF_JOURNAL_FK FOREIGN KEY (JOURNAL_ID) REFERENCES JOURNAL (JOURNAL_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;
ALTER TABLE REFERENCE ADD CONSTRAINT REF_BOOK_FK FOREIGN KEY (BOOK_ID) REFERENCES BOOK (BOOK_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;

DROP TABLE REFERENCEALIAS;
CREATE TABLE REFERENCEALIAS ( ALIAS_ID INTEGER NOT NULL, REFERENCE_ID INTEGER, CONSTRAINT REFERENCEALIAS_PK PRIMARY KEY (ALIAS_ID) ) TABLESPACE DATA1;
ALTER TABLE REFERENCEALIAS ADD CONSTRAINT REFALIAS_REF_FK FOREIGN KEY (REFERENCE_ID) REFERENCES REFERENCE (REFERENCE_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;
ALTER TABLE REFERENCEALIAS ADD CONSTRAINT REFALIAS_FK FOREIGN KEY (ALIAS_ID) REFERENCES ALIAS (ALIAS_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;

DROP TABLE REFERENCEURL;
CREATE TABLE REFERENCEURL ( URL_ID INTEGER NOT NULL, REFERENCE_ID INTEGER NOT NULL, CONSTRAINT REFERENCEURL_PK PRIMARY KEY (URL_ID) ) TABLESPACE DATA1;
ALTER TABLE REFERENCEURL ADD CONSTRAINT REFEURL_REF_FK FOREIGN KEY (REFERENCE_ID) REFERENCES REFERENCE (REFERENCE_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;
ALTER TABLE REFERENCEURL ADD CONSTRAINT REFURL_FK FOREIGN KEY (URL_ID) REFERENCES URL (URL_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;

DROP TABLE REFERENCE_RELATION;
CREATE TABLE REFERENCE_RELATION ( REFERENCE_RELATION_ID INTEGER NOT NULL, PARENT_REFERENCE_ID INTEGER NOT NULL, CHILD_REFERENCE_ID INTEGER NOT NULL, DATE_CREATED DATE, CREATED_BY VARCHAR2(12), CONSTRAINT REFERENCE_RELATION_PK PRIMARY KEY (REFERENCE_RELATION_ID), CONSTRAINT REFERENCE_RELATION_UK UNIQUE (CHILD_REFERENCE_ID, PARENT_REFERENCE_ID) ) TABLESPACE DATA1;
ALTER TABLE REFERENCE_RELATION ADD CONSTRAINT REFREL_CHILD_FK FOREIGN KEY (CHILD_REFERENCE_ID) REFERENCES REFERENCE (REFERENCE_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;
ALTER TABLE REFERENCE_RELATION ADD CONSTRAINT REFREL_PARENT_FK FOREIGN KEY (PARENT_REFERENCE_ID) REFERENCES REFERENCE (REFERENCE_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;

DROP TABLE ABSTRACT;
CREATE TABLE ABSTRACT ( REFERENCE_ID INTEGER NOT NULL, TEXT CLOB, CONSTRAINT ABSTRACT_PK PRIMARY KEY (REFERENCE_ID) ) TABLESPACE DATA2;
ALTER TABLE ABSTRACT ADD CONSTRAINT ABST_REF_FK FOREIGN KEY (REFERENCE_ID) REFERENCES REFERENCE (REFERENCE_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;

DROP TABLE BIBENTRY;
CREATE TABLE BIBENTRY ( REFERENCE_ID INTEGER NOT NULL, TEXT CLOB, CONSTRAINT BIBENTRY_PK PRIMARY KEY (REFERENCE_ID) ) TABLESPACE DATA1;
ALTER TABLE BIBENTRY ADD CONSTRAINT BIB_REF_FK FOREIGN KEY (REFERENCE_ID) REFERENCES REFERENCE (REFERENCE_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;

DROP TABLE REFTYPE;
CREATE TABLE REFTYPE ( REFTYPE_ID INTEGER NOT NULL, REFTYPE VARCHAR2(100), REFERENCE_ID INTEGER, SOURCE VARCHAR2(40), CONSTRAINT REFTYPE_PK PRIMARY KEY (REFTYPE_ID), CONSTRAINT REFTYPE_UK UNIQUE (REFERENCE_ID, REFTYPE) ) TABLESPACE DATA1;
ALTER TABLE REFTYPE ADD CONSTRAINT REFTYPE_REF_FK FOREIGN KEY (REFERENCE_ID) REFERENCES REFERENCE (REFERENCE_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;

DROP TABLE AUTHOR;
CREATE TABLE AUTHOR ( AUTHOR_ID INTEGER NOT NULL, FORMAT_NAME VARCHAR2(60), DISPLAY_NAME VARCHAR2(60), OBJ_LINK VARCHAR2(100), DATE_CREATED DATE, CREATED_BY VARCHAR2(12), CONSTRAINT AUTHOR_PK PRIMARY KEY (AUTHOR_ID), CONSTRAINT AUTHOR_UK UNIQUE (FORMAT_NAME) ) TABLESPACE DATA1;

DROP TABLE AUTHOR_REFERENCE;
CREATE TABLE AUTHOR_REFERENCE ( AUTHOR_REFERENCE_ID INTEGER NOT NULL, AUTHOR_ID INTEGER NOT NULL, REFERENCE_ID INTEGER NOT NULL, AUTHOR_ORDER INTEGER, AUTHOR_TYPE VARCHAR2(40), CONSTRAINT AUTHOR_REFERENCE_PK PRIMARY KEY (AUTHOR_REFERENCE_ID), CONSTRAINT AUTHOR_REFERENCE_UK UNIQUE (AUTHOR_ORDER, REFERENCE_ID, AUTHOR_ID) ) TABLESPACE DATA1;
CREATE INDEX AUTHOR_REFERENCE_FK2 ON AUTHOR_REFERENCE (REFERENCE_ID);
CREATE INDEX AUTHOR_REFERENCE_FK1 ON AUTHOR_REFERENCE (AUTHOR_ID);
ALTER TABLE AUTHOR_REFERENCE ADD CONSTRAINT AUTHORREF_AUTHOR_FK FOREIGN KEY (AUTHOR_ID) REFERENCES AUTHOR (AUTHOR_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;
ALTER TABLE AUTHOR_REFERENCE ADD CONSTRAINT AUTHORREF_REF_FK FOREIGN KEY (REFERENCE_ID) REFERENCES REFERENCE (REFERENCE_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;

/* Evelement */

DROP TABLE EXPERIMENT;
CREATE TABLE EXPERIMENT ( EXPERIMENT_ID INTEGER NOT NULL, FORMAT_NAME VARCHAR2(150), DISPLAY_NAME VARCHAR2(150), ECO_ID VARCHAR2(25), DESCRIPTION VARCHAR2(350), OBJ_LINK VARCHAR2(100), DATE_CREATED DATE, CREATED_BY VARCHAR2(25), CONSTRAINT EXPERIMENT_PK PRIMARY KEY (EXPERIMENT_ID) ) TABLESPACE DATA1;

DROP TABLE EXPERIMENTALIAS;
CREATE TABLE EXPERIMENTALIAS ( ALIAS_ID INTEGER NOT NULL, EXPERIMENT_ID INTEGER, CONSTRAINT EXPERIMENTALIAS_PK PRIMARY KEY (ALIAS_ID) ) TABLESPACE DATA1;
ALTER TABLE EXPERIMENTALIAS ADD CONSTRAINT EXPALIAS_FK FOREIGN KEY (ALIAS_ID) REFERENCES ALIAS (ALIAS_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;
ALTER TABLE EXPERIMENTALIAS ADD CONSTRAINT EXPALIAS_EXP_FK FOREIGN KEY (EXPERIMENT_ID) REFERENCES EXPERIMENT (EXPERIMENT_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;

DROP TABLE EXPERIMENT_RELATION;
CREATE TABLE EXPERIMENT_RELATION ( EXPERIMENT_RELATION_ID INTEGER NOT NULL, PARENT_EXPERIMENT_ID INTEGER, CHILD_EXPERIMENT_ID INTEGER, CREATED_BY VARCHAR2(15), DATE_CREATED DATE, CONSTRAINT EXPERIMENT_RELATION_PK PRIMARY KEY (EXPERIMENT_RELATION_ID) ) TABLESPACE DATA1;
ALTER TABLE EXPERIMENT_RELATION ADD CONSTRAINT EXPREL_CHILD_FK FOREIGN KEY (CHILD_EXPERIMENT_ID) REFERENCES EXPERIMENT (EXPERIMENT_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;
ALTER TABLE EXPERIMENT_RELATION ADD CONSTRAINT EXPREL_PARENT_FK FOREIGN KEY (PARENT_EXPERIMENT_ID) REFERENCES EXPERIMENT (EXPERIMENT_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;

DROP TABLE STRAIN;
CREATE TABLE STRAIN ( STRAIN_ID INTEGER NOT NULL, FORMAT_NAME VARCHAR2(50), DISPLAY_NAME VARCHAR2(50), DESCRIPTION VARCHAR2(150), OBJ_LINK VARCHAR2(100), DATE_CREATED DATE, CREATED_BY VARCHAR2(12), CONSTRAINT STRAIN_PK PRIMARY KEY (STRAIN_ID) ) TABLESPACE DATA1;

DROP TABLE EVIDENCE;
CREATE TABLE EVIDENCE ( EVIDENCE_ID INTEGER NOT NULL, CLASS VARCHAR2(40), REFERENCE_ID INTEGER, EXPERIMENT_ID INTEGER, STRAIN_ID INTEGER, SOURCE VARCHAR2(50), NOTE VARCHAR2(1000), DATE_CREATED DATE, CREATED_BY VARCHAR2(15), CONSTRAINT EVIDENCE_PK PRIMARY KEY (EVIDENCE_ID) ) TABLESPACE DATA2;
CREATE INDEX REF_INDX ON EVIDENCE (REFERENCE_ID);
ALTER TABLE EVIDENCE ADD CONSTRAINT EV_REF_FK FOREIGN KEY (REFERENCE_ID) REFERENCES REFERENCE (REFERENCE_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;
ALTER TABLE EVIDENCE ADD CONSTRAINT EV_STRAIN_FK FOREIGN KEY (STRAIN_ID) REFERENCES STRAIN (STRAIN_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;
ALTER TABLE EVIDENCE ADD CONSTRAINT EV_EXP_FK FOREIGN KEY (EXPERIMENT_ID) REFERENCES EXPERIMENT (EXPERIMENT_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;

/* Bioentity */

DROP TABLE BIOENTITY;
CREATE TABLE BIOENTITY ( BIOENTITY_ID INTEGER NOT NULL, FORMAT_NAME VARCHAR2(150), DISPLAY_NAME VARCHAR2(50), CLASS VARCHAR2(50), STATUS VARCHAR2(25), SOURCE VARCHAR2(25), OBJ_LINK VARCHAR2(100), DATE_CREATED DATE, CREATED_BY VARCHAR2(15), CONSTRAINT BIOENTITY_PK PRIMARY KEY (BIOENTITY_ID), CONSTRAINT BIOENTITY_UK UNIQUE (CLASS, FORMAT_NAME) ) TABLESPACE DATA1;

DROP TABLE BIOENTITYALIAS;
CREATE TABLE BIOENTITYALIAS ( ALIAS_ID INTEGER NOT NULL, BIOENTITY_ID INTEGER, CONSTRAINT BIOENTITYALIAS_PK PRIMARY KEY (ALIAS_ID) ) TABLESPACE DATA1;
ALTER TABLE BIOENTITYALIAS ADD CONSTRAINT BIOENTALIAS_BIOENT_FK FOREIGN KEY (BIOENTITY_ID) REFERENCES BIOENTITY (BIOENTITY_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;
ALTER TABLE BIOENTITYALIAS ADD CONSTRAINT BIOENTALIAS_FK FOREIGN KEY (ALIAS_ID) REFERENCES ALIAS (ALIAS_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;

DROP TABLE BIOENTITYURL;
CREATE TABLE BIOENTITYURL ( URL_ID INTEGER NOT NULL, BIOENTITY_ID INTEGER NOT NULL, CONSTRAINT BIOENTITYURL_PK PRIMARY KEY (URL_ID) ) TABLESPACE DATA1;
ALTER TABLE BIOENTITYURL ADD CONSTRAINT BIOENTURL_BIOENT_FK FOREIGN KEY (BIOENTITY_ID) REFERENCES BIOENTITY (BIOENTITY_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;
ALTER TABLE BIOENTITYURL ADD CONSTRAINT BIOENTURL_FK FOREIGN KEY (URL_ID) REFERENCES URL (URL_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;

DROP TABLE QUALIFIEREVIDENCE;
CREATE TABLE QUALIFIEREVIDENCE ( EVIDENCE_ID INTEGER NOT NULL, BIOENTITY_ID INTEGER, QUALIFIER VARCHAR2(30), CONSTRAINT QUALIFIEREVIDENCE_PK PRIMARY KEY (EVIDENCE_ID) ) TABLESPACE DATA1;
ALTER TABLE QUALIFIEREVIDENCE ADD CONSTRAINT QUALEV_BIOENT_FK FOREIGN KEY (BIOENTITY_ID) REFERENCES BIOENTITY (BIOENTITY_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;
ALTER TABLE QUALIFIEREVIDENCE ADD CONSTRAINT QUALEV_FK FOREIGN KEY (EVIDENCE_ID) REFERENCES EVIDENCE (EVIDENCE_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;

DROP TABLE LOCUSBIOENTITY;
CREATE TABLE LOCUSBIOENTITY ( BIOENTITY_ID INTEGER NOT NULL, LOCUS_TYPE VARCHAR2(50), DBXREF VARCHAR2(50), STATUS VARCHAR2(40), QUALIFIER VARCHAR2(40), ATTRIBUTE VARCHAR2(40), NAME_DESCRIPTION VARCHAR2(100), GENETIC_POSITION NUMBER, HEADLINE VARCHAR2(70), DESCRIPTION VARCHAR2(480), CONSTRAINT LOCUSBIOENTITY_PK PRIMARY KEY (BIOENTITY_ID) ) TABLESPACE DATA1;
ALTER TABLE LOCUSBIOENTITY ADD CONSTRAINT LOCUS_FK FOREIGN KEY (BIOENTITY_ID) REFERENCES BIOENTITY (BIOENTITY_ID);

DROP TABLE PROTEINBIOENTITY;
CREATE TABLE PROTEINBIOENTITY ( BIOENTITY_ID INTEGER NOT NULL, LOCUS_ID INTEGER, MOLECULAR_WEIGHT INTEGER, PROTEIN_LENGTH INTEGER, N_TERM_SEQ VARCHAR2(40), C_TERM_SEQ VARCHAR2(40), CONSTRAINT PROTEINBIOENTITY_PK PRIMARY KEY (BIOENTITY_ID) ) TABLESPACE DATA1;
ALTER TABLE PROTEINBIOENTITY ADD CONSTRAINT PROTEIN_FK FOREIGN KEY (BIOENTITY_ID) REFERENCES BIOENTITY (BIOENTITY_ID);
ALTER TABLE PROTEINBIOENTITY ADD CONSTRAINT PROTEIN_BIOENT_FK FOREIGN KEY (LOCUS_ID) REFERENCES BIOENTITY (BIOENTITY_ID);

DROP TABLE PDOMAIN;
CREATE TABLE PDOMAIN ( PDOMAIN_ID INTEGER NOT NULL, FORMAT_NAME VARCHAR2(250), DISPLAY_NAME VARCHAR2(100), DESCRIPTION VARCHAR2(500), INTERPRO_ID VARCHAR2(40), INTERPRO_DESCRIPTION VARCHAR2(500), OBJ_LINK VARCHAR2(250), SOURCE VARCHAR2(25), CONSTRAINT PDOMAIN_PK PRIMARY KEY (PDOMAIN_ID), CONSTRAINT PDOMAIN_UK UNIQUE (FORMAT_NAME) ) TABLESPACE DATA1;
DROP SEQUENCE PDOMAIN_SEQ;
CREATE SEQUENCE PDOMAIN_SEQ;
DROP TRIGGER PDOMAIN_TRIGGER;
--/
CREATE TRIGGER PDOMAIN_TRIGGER
BEFORE INSERT ON pdomain
FOR EACH ROW
BEGIN
SELECT pdomain_seq.nextval INTO :new.pdomain_id FROM DUAL;
END;
/

DROP TABLE PDOMAINEVIDENCE;
CREATE TABLE PDOMAINEVIDENCE ( EVIDENCE_ID INTEGER NOT NULL, START_INDEX INTEGER, END_INDEX INTEGER, EVALUE VARCHAR2(40), STATUS VARCHAR2(10), DATE_OF_RUN VARCHAR2(40), PROTEIN_ID INTEGER, PDOMAIN_ID INTEGER, CONSTRAINT PDOMAINEVIDENCE_PK PRIMARY KEY (EVIDENCE_ID) ) TABLESPACE DATA1;
ALTER TABLE PDOMAINEVIDENCE ADD CONSTRAINT PDOMAINEV_BIOENT_FK FOREIGN KEY (PROTEIN_ID) REFERENCES PROTEIN (PROTEIN_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;
ALTER TABLE PDOMAINEVIDENCE ADD CONSTRAINT PDOMAINEV_PDOMAIN_FK FOREIGN KEY (PDOMAIN_ID) REFERENCES PDOMAIN (PDOMAIN_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;
ALTER TABLE PDOMAINEVIDENCE ADD CONSTRAINT PDOMAINEV_FK FOREIGN KEY (EVIDENCE_ID) REFERENCES EVIDENCE (EVIDENCE_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;

DROP TABLE AUX_BIOENTITY_REFERENCE;
CREATE TABLE AUX_BIOENTITY_REFERENCE ( BIOENTITY_REFERENCE_ID INTEGER, BIOENTITY_ID INTEGER, REFERENCE_ID INTEGER, CLASS VARCHAR2(40), CONSTRAINT BIOENTITY_REFERENCE_PK PRIMARY KEY (BIOENTITY_REFERENCE_ID), CONSTRAINT BIOENTITY_REFERENCE_UK UNIQUE (BIOENTITY_ID, CLASS, REFERENCE_ID) ) TABLESPACE DATA1;
CREATE INDEX BIOENTREF_REF_INDX ON AUX_BIOENTITY_REFERENCE (REFERENCE_ID);
CREATE INDEX BIOENTREF_BIOENT_INDX ON AUX_BIOENTITY_REFERENCE (BIOENTITY_ID);
DROP SEQUENCE BIOENTREF_SEQ;
CREATE SEQUENCE BIOENTREF_SEQ;
DROP TRIGGER BIOENTREF_TRIGGER;
--/
CREATE TRIGGER BIOENT_REF_TRIGGER
BEFORE INSERT ON aux_bioentity_reference
FOR EACH ROW
BEGIN
SELECT bioentref_seq.nextval INTO :new.bioentity_reference_id FROM DUAL;
END;
/

/* Interaction */

DROP TABLE GENINTERACTIONEVIDENCE;
CREATE TABLE GENINTERACTIONEVIDENCE ( EVIDENCE_ID INTEGER NOT NULL, PHENOTYPE_ID INTEGER, ANNOTATION_TYPE VARCHAR2(50), BAIT_HIT VARCHAR2(25), BIOENTITY1_ID INTEGER, BIOENTITY2_ID INTEGER, CONSTRAINT GENINTERACTIONEVIDENCE_PK PRIMARY KEY (EVIDENCE_ID) ) TABLESPACE DATA1;
CREATE INDEX GENINTEV_BIOENT2_INDEX ON GENINTERACTIONEVIDENCE (BIOENTITY2_ID);
CREATE INDEX GENINTEV_BIOENT1_INDEX ON GENINTERACTIONEVIDENCE (BIOENTITY1_ID);
ALTER TABLE GENINTERACTIONEVIDENCE ADD CONSTRAINT GENINTEV_FK FOREIGN KEY (EVIDENCE_ID) REFERENCES EVIDENCE (EVIDENCE_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;
ALTER TABLE GENINTERACTIONEVIDENCE ADD CONSTRAINT GENINTEV_PHENO_FK FOREIGN KEY (PHENOTYPE_ID) REFERENCES PHENOTYPEBIOCONCEPT (BIOCONCEPT_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;

DROP TABLE PHYSINTERACTIONEVIDENCE;
CREATE TABLE PHYSINTERACTIONEVIDENCE ( EVIDENCE_ID INTEGER NOT NULL, MODIFICATION VARCHAR2(50), ANNOTATION_TYPE VARCHAR2(50), BAIT_HIT VARCHAR2(25), BIOENTITY1_ID INTEGER, BIOENTITY2_ID INTEGER, CONSTRAINT PHYSINTERACTIONEVIDENCE_PK PRIMARY KEY (EVIDENCE_ID) ) TABLESPACE DATA1;
CREATE INDEX PHYSINTEV_BIOENT2_INDEX ON PHYSINTERACTIONEVIDENCE (BIOENTITY2_ID);
CREATE INDEX PHYSINTEV_BIOENT1_INDEX ON PHYSINTERACTIONEVIDENCE (BIOENTITY1_ID);
ALTER TABLE PHYSINTERACTIONEVIDENCE ADD CONSTRAINT PHYSINTEV_FK FOREIGN KEY (EVIDENCE_ID) REFERENCES EVIDENCE (EVIDENCE_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;

DROP TABLE AUX_INTERACTION;
CREATE TABLE AUX_INTERACTION ( INTERACTION_ID INTEGER NOT NULL, FORMAT_NAME VARCHAR2(100), DISPLAY_NAME VARCHAR2(100), CLASS VARCHAR2(40), BIOENTITY1_ID INTEGER, BIOENTITY2_ID INTEGER, EVIDENCE_COUNT INTEGER, CONSTRAINT INTERACTION_PK PRIMARY KEY (INTERACTION_ID), CONSTRAINT INTERACTION_UK2 UNIQUE (CLASS, BIOENTITY2_ID, BIOENTITY1_ID), CONSTRAINT INTERACTION_UK1 UNIQUE (CLASS, FORMAT_NAME) ) TABLESPACE DATA1;
CREATE INDEX INTERACTION_BIOENT2_INDEX ON AUX_INTERACTION (BIOENTITY2_ID);
CREATE INDEX INTERACTION_BIOENT1_INDEX ON AUX_INTERACTION (BIOENTITY1_ID);

DROP TABLE AUX_INTERACTION_FAMILY;
CREATE TABLE AUX_INTERACTION_FAMILY ( INTERACTION_FAMILY_ID INTEGER NOT NULL, BIOENTITY_ID INTEGER, BIOENTITY1_ID INTEGER, BIOENTITY2_ID INTEGER, EVIDENCE_COUNT INTEGER, GEN_EV_COUNT INTEGER, PHYS_EV_COUNT INTEGER, CONSTRAINT INTERACTION_FAMILY_PK PRIMARY KEY (INTERACTION_FAMILY_ID), CONSTRAINT INTERACTION_FAMILY_UK UNIQUE (BIOENTITY_ID, BIOENTITY2_ID, BIOENTITY1_ID) ) TABLESPACE DATA1;
CREATE INDEX INTERFAM_BIOENT_ID_INDEX ON AUX_INTERACTION_FAMILY (BIOENTITY_ID);
DROP SEQUENCE INTERFAM_SEQ;
CREATE SEQUENCE INTERFAM_SEQ;
DROP TRIGGER INTERFAM_TRIGGER;
--/
CREATE TRIGGER INTERFAM_TRIGGER
BEFORE INSERT ON aux_interaction_family
FOR EACH ROW
BEGIN
SELECT interfam_seq.nextval INTO :new.interaction_family_id FROM DUAL;
END;
/

/* Literature */

DROP TABLE LITERATUREEVIDENCE;
CREATE TABLE LITERATUREEVIDENCE ( EVIDENCE_ID INTEGER NOT NULL, BIOENTITY_ID INTEGER, TOPIC VARCHAR2(100), CONSTRAINT LITERATUREEVIDENCE_PK PRIMARY KEY (EVIDENCE_ID) ) TABLESPACE DATA1;
ALTER TABLE LITERATUREEVIDENCE ADD CONSTRAINT LITEV_FK FOREIGN KEY (EVIDENCE_ID) REFERENCES EVIDENCE (EVIDENCE_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;
ALTER TABLE LITERATUREEVIDENCE ADD CONSTRAINT LITEV_BIOENT_FK FOREIGN KEY (BIOENTITY_ID) REFERENCES BIOENTITY (BIOENTITY_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;

/* Regulation */

DROP TABLE REGULATIONEVIDENCE;
CREATE TABLE REGULATIONEVIDENCE ( EVIDENCE_ID INTEGER NOT NULL, BIOENTITY1_ID INTEGER, BIOENTITY2_ID INTEGER, CONDITIONS VARCHAR2(100), CONSTRAINT REGULATIONEVIDENCE_PK PRIMARY KEY (EVIDENCE_ID) ) TABLESPACE DATA1;
ALTER TABLE REGULATIONEVIDENCE ADD CONSTRAINT REGEV_FK FOREIGN KEY (EVIDENCE_ID) REFERENCES EVIDENCE (EVIDENCE_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;
ALTER TABLE REGULATIONEVIDENCE ADD CONSTRAINT REGEV_BIOENT2_FK FOREIGN KEY (BIOENTITY2_ID) REFERENCES BIOENTITY (BIOENTITY_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;
ALTER TABLE REGULATIONEVIDENCE ADD CONSTRAINT REGEV_BIOENT1_FK FOREIGN KEY (BIOENTITY1_ID) REFERENCES BIOENTITY (BIOENTITY_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;

DROP TABLE AUX_REGULATION_FAMILY;
CREATE TABLE AUX_REGULATION_FAMILY ( REGULATION_FAMILY_ID INTEGER NOT NULL, BIOENTITY_ID INTEGER, BIOENTITY1_ID INTEGER, BIOENTITY2_ID INTEGER, EVIDENCE_COUNT INTEGER, CONSTRAINT REGULATION_FAMILY_PK PRIMARY KEY (REGULATION_FAMILY_ID), CONSTRAINT REGULATION_FAMILY_UK UNIQUE (BIOENTITY_ID, BIOENTITY2_ID, BIOENTITY1_ID) ) TABLESPACE DATA1;
CREATE INDEX REGFAM_BIOENT_ID_INDEX ON AUX_REGULATION_FAMILY (BIOENTITY_ID) TABLESPACE DATA1;
DROP SEQUENCE REGFAM_SEQ;
CREATE SEQUENCE REGFAM_SEQ;
DROP TRIGGER REGFAM_TRIGGER;
--/
CREATE TRIGGER REGFAM_TRIGGER
BEFORE INSERT ON aux_regulation_family
FOR EACH ROW
BEGIN
SELECT regfam_seq.nextval INTO :new.regulation_family_id FROM DUAL;
END;
/

/* Binding */

DROP TABLE BINDINGEVIDENCE;
CREATE TABLE BINDINGEVIDENCE ( EVIDENCE_ID INTEGER NOT NULL, BIOENTITY_ID INTEGER, TOTAL_SCORE VARCHAR2(10), expert_confidence VARCHAR2(40), IMG_URL VARCHAR2(150), MOTIF_ID INT, CONSTRAINT BINDINGEVIDENCE_PK PRIMARY KEY (EVIDENCE_ID) ) TABLESPACE DATA1;
ALTER TABLE BINDINGEVIDENCE ADD CONSTRAINT BINDEV_FK FOREIGN KEY (EVIDENCE_ID) REFERENCES EVIDENCE (EVIDENCE_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;
ALTER TABLE BINDINGEVIDENCE ADD CONSTRAINT REGEV_BIOENT_FK FOREIGN KEY (BIOENTITY_ID) REFERENCES BIOENTITY (BIOENTITY_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;

/* Bioconcept */

DROP TABLE BIOCONCEPT;
CREATE TABLE BIOCONCEPT ( BIOCONCEPT_ID INTEGER NOT NULL, FORMAT_NAME VARCHAR2(500), DISPLAY_NAME VARCHAR2(500), CLASS VARCHAR2(25), DESCRIPTION VARCHAR2(1500), OBJ_LINK VARCHAR2(100), DATE_CREATED DATE, CREATED_BY VARCHAR2(15), CONSTRAINT BIOCONCEPT_PK PRIMARY KEY (BIOCONCEPT_ID), CONSTRAINT BIOCONCEPT_UK UNIQUE (CLASS, FORMAT_NAME) ) TABLESPACE DATA1;

DROP TABLE BIOCONCEPTALIAS;
CREATE TABLE BIOCONCEPTALIAS ( ALIAS_ID INTEGER NOT NULL, BIOCONCEPT_ID INTEGER, CLASS VARCHAR2(40), CONSTRAINT BIOCONCEPTALIAS_PK PRIMARY KEY (ALIAS_ID) ) TABLESPACE DATA1;
ALTER TABLE BIOCONCEPTALIAS ADD CONSTRAINT BIOCONALIAS_BIOCON_FK FOREIGN KEY (BIOCONCEPT_ID) REFERENCES BIOCONCEPT (BIOCONCEPT_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;
ALTER TABLE BIOCONCEPTALIAS ADD CONSTRAINT BIOCONALIAS_FK FOREIGN KEY (ALIAS_ID) REFERENCES ALIAS (ALIAS_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;

DROP TABLE BIOCONCEPT_RELATION;
CREATE TABLE BIOCONCEPT_RELATION ( BIOCONCEPT_RELATION_ID INTEGER NOT NULL, PARENT_BIOCONCEPT_ID INTEGER NOT NULL, CHILD_BIOCONCEPT_ID INTEGER NOT NULL, CLASS VARCHAR2(25), RELATIONSHIP_TYPE VARCHAR2(25), CONSTRAINT BIOCONCEPT_RELATION_PK PRIMARY KEY (BIOCONCEPT_RELATION_ID), CONSTRAINT BIOCONCEPT_RELATION_UK UNIQUE (CLASS, RELATIONSHIP_TYPE, CHILD_BIOCONCEPT_ID, PARENT_BIOCONCEPT_ID) ) TABLESPACE DATA1;
CREATE INDEX BIOCONREL_CHILD_INDEX ON BIOCONCEPT_RELATION (CHILD_BIOCONCEPT_ID);
CREATE INDEX BIOCONREL_PARENT_INDEX ON BIOCONCEPT_RELATION (PARENT_BIOCONCEPT_ID);
ALTER TABLE BIOCONCEPT_RELATION ADD CONSTRAINT BIOCONREL_CHILD_FK FOREIGN KEY (CHILD_BIOCONCEPT_ID) REFERENCES BIOCONCEPT (BIOCONCEPT_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;
ALTER TABLE BIOCONCEPT_RELATION ADD CONSTRAINT BIOCONREL_PARENT_FK FOREIGN KEY (PARENT_BIOCONCEPT_ID) REFERENCES BIOCONCEPT (BIOCONCEPT_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;
DROP SEQUENCE BIOCONREL_SEQ;
CREATE SEQUENCE BIOCONREL_SEQ;
DROP TRIGGER BIOCONREL_TRIGGER;
--/
CREATE TRIGGER BIOCONREL_TRIGGER
BEFORE INSERT ON bioconcept_relation
FOR EACH ROW
BEGIN
SELECT biocrel_seq.nextval INTO :new.bioconcept_relation_id FROM dual;
end; 
/

DROP TABLE AUX_BIOCONCEPT_ANCESTOR;
CREATE TABLE AUX_BIOCONCEPT_ANCESTOR ( BIOCONCEPT_ANCESTOR_ID INTEGER NOT NULL, ANCESTOR_BIOCONCEPT_ID INTEGER, CHILD_BIOCONCEPT_ID INTEGER, GENERATION INTEGER, CLASS VARCHAR2(25), CONSTRAINT BIOCONCEPT_ANCESTOR_PK PRIMARY KEY (BIOCONCEPT_ANCESTOR_ID) ) TABLESPACE DATA2;
DROP SEQUENCE BIOCONANC_SEQ;
CREATE SEQUENCE BIOCONANC_SEQ;
DROP TRIGGER BIOCONANC_TRIGGER;
--/
CREATE TRIGGER BIOCONANC_TRIGGER
BEFORE INSERT ON aux_bioconcept_ancestor
FOR EACH ROW
BEGIN
SELECT bioconanc_seq.nextval INTO :new.bioconcept_ancestor_id FROM dual;
end; 
/

DROP TABLE AUX_BIOFACT;
CREATE TABLE AUX_BIOFACT ( BIOFACT_ID INTEGER NOT NULL, BIOENTITY_ID INTEGER, BIOCONCEPT_ID INTEGER, CLASS VARCHAR2(25), CONSTRAINT BIOFACT_PK PRIMARY KEY (BIOFACT_ID), CONSTRAINT BIOFACT_UK UNIQUE (CLASS, BIOCONCEPT_ID, BIOENTITY_ID) ) TABLESPACE DATA1;
CREATE INDEX BIOFACT_FK2 ON AUX_BIOFACT (BIOCONCEPT_ID);
CREATE INDEX BIOFACT_FK1 ON AUX_BIOFACT (BIOENTITY_ID);
DROP SEQUENCE BIOFACT_SEQ;
CREATE SEQUENCE BIOFACT_SEQ;
DROP TRIGGER BIOFACT_TRIGGER;
--/
CREATE TRIGGER BIOFACT_TRIGGER
BEFORE INSERT ON aux_biofact
FOR EACH ROW
BEGIN
SELECT biofact_seq.nextval INTO :new.biofact_id FROM dual;
END; 
/

/* GO */

DROP TABLE GOBIOCONCEPT;
CREATE TABLE GOBIOCONCEPT ( BIOCONCEPT_ID INTEGER NOT NULL, GO_GO_ID INTEGER, GO_ASPECT VARCHAR2(40), DIRECT_GENE_COUNT INTEGER, CONSTRAINT GOBIOCONCEPT_PK PRIMARY KEY (BIOCONCEPT_ID) ) TABLESPACE DATA1;
ALTER TABLE GOBIOCONCEPT ADD CONSTRAINT GO_FK FOREIGN KEY (BIOCONCEPT_ID) REFERENCES BIOCONCEPT (BIOCONCEPT_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;

DROP TABLE GOEVIDENCE;
CREATE TABLE GOEVIDENCE ( EVIDENCE_ID INTEGER NOT NULL, GO_EVIDENCE VARCHAR2(40), ANNOTATION_TYPE VARCHAR2(40), SOURCE VARCHAR2(40), DATE_LAST_REVIEWED DATE, QUALIFIER VARCHAR2(40), BIOENTITY_ID INTEGER, BIOCONCEPT_ID INTEGER, CONSTRAINT GOEVIDENCE_PK PRIMARY KEY (EVIDENCE_ID) ) TABLESPACE DATA1;
ALTER TABLE GOEVIDENCE ADD CONSTRAINT GOEV_FK FOREIGN KEY (EVIDENCE_ID) REFERENCES EVIDENCE (EVIDENCE_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;
ALTER TABLE GOEVIDENCE ADD CONSTRAINT GOEV_BIOENT_FK FOREIGN KEY (BIOENTITY_ID) REFERENCES BIOENTITY (BIOENTITY_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;
ALTER TABLE GOEVIDENCE ADD CONSTRAINT GOEV_GO_FK FOREIGN KEY (BIOCONCEPT_ID) REFERENCES GOBIOCONCEPT (BIOCONCEPT_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;

/* Chemical */

DROP TABLE CHEMICAL;
CREATE TABLE CHEMICAL ( CHEMICAL_ID INTEGER NOT NULL, FORMAT_NAME VARCHAR2(500), DISPLAY_NAME VARCHAR2(500), SOURCE VARCHAR2(10), OBJ_LINK VARCHAR2(100), DATE_CREATED DATE, CREATED_BY VARCHAR2(12), CONSTRAINT CHEMICAL_PK PRIMARY KEY (CHEMICAL_ID), CONSTRAINT CHEMICAL_UK UNIQUE (FORMAT_NAME) ) TABLESPACE DATA1;
DROP SEQUENCE CHEM_SEQ;
CREATE SEQUENCE CHEM_SEQ;
DROP TRIGGER CHEM_TRIGGER;
--/
CREATE TRIGGER CHEM_TRIGGER
BEFORE INSERT ON chemical
FOR EACH ROW
BEGIN
SELECT chem_seq.nextval INTO :new.chemical_id FROM DUAL;
END;
/

DROP TABLE CHEMICALALIAS;
CREATE TABLE CHEMICALALIAS ( ALIAS_ID INTEGER NOT NULL, CHEMICAL_ID INTEGER, SYNONYM_TYPE VARCHAR2(50), CONSTRAINT CHEMICALALIAS_PK PRIMARY KEY (ALIAS_ID) ) TABLESPACE DATA1;
ALTER TABLE CHEMICALALIAS ADD CONSTRAINT CHEMALIAS_FK FOREIGN KEY (ALIAS_ID) REFERENCES ALIAS (ALIAS_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;
ALTER TABLE CHEMICALALIAS ADD CONSTRAINT CHEMALIAS_CHEM_FK FOREIGN KEY (CHEMICAL_ID) REFERENCES CHEMICAL (CHEMICAL_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;

DROP TABLE CHEMICAL_RELATION;
CREATE TABLE CHEMICAL_RELATION ( CHEMICAL_RELATION_ID INTEGER NOT NULL, CHILD_CHEMICAL_ID INTEGER, PARENT_CHEMICAL_ID INTEGER, DATE_CREATED DATE, CREATED_BY VARCHAR2(12), CONSTRAINT CHEMICAL_RELATION_PK PRIMARY KEY (CHEMICAL_RELATION_ID) ) TABLESPACE DATA1;
ALTER TABLE CHEMICAL_RELATION ADD CONSTRAINT CHEMREL_PARENT_FK FOREIGN KEY (PARENT_CHEMICAL_ID) REFERENCES CHEMICAL (CHEMICAL_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;
ALTER TABLE CHEMICAL_RELATION ADD CONSTRAINT CHEMREL_CHILD_FK FOREIGN KEY (CHILD_CHEMICAL_ID) REFERENCES CHEMICAL (CHEMICAL_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;

DROP TABLE EVIDENCE_CHEMICAL;
CREATE TABLE EVIDENCE_CHEMICAL ( EVIDENCE_CHEMICAL_ID INTEGER NOT NULL, EVIDENCE_ID INTEGER, CHEMICAL_ID INTEGER, CHEMICAL_AMOUNT VARCHAR2(300), CLASS VARCHAR(100), CONSTRAINT EVIDENCE_CHEMICAL_PK PRIMARY KEY (EVIDENCE_CHEMICAL_ID), CONSTRAINT EVIDENCE_CHEMICAL_UK UNIQUE (CHEMICAL_AMOUNT, CHEMICAL_ID, EVIDENCE_ID) ) TABLESPACE DATA1;
ALTER TABLE EVIDENCE_CHEMICAL ADD CONSTRAINT EVCHEM_EV_FK FOREIGN KEY (EVIDENCE_ID) REFERENCES EVIDENCE (EVIDENCE_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;
ALTER TABLE EVIDENCE_CHEMICAL ADD CONSTRAINT EVCHEM_CHEM_FK FOREIGN KEY (CHEMICAL_ID) REFERENCES CHEMICAL (CHEMICAL_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;
DROP SEQUENCE EVCHEM_SEQ;
CREATE SEQUENCE EVCHEM_SEQ;
DROP TRIGGER EVCHEM_TRIGGER;
--/
CREATE TRIGGER EVCHEM_TRIGGER
BEFORE INSERT ON evidence_chemical
FOR EACH ROW
BEGIN
SELECT evchem_seq.nextval INTO :new.evidence_chemical_id FROM DUAL;
END;
/

/* Phenotype */

DROP TABLE ALLELE;
CREATE TABLE ALLELE ( ALLELE_ID INTEGER NOT NULL, FORMAT_NAME VARCHAR2(100), DISPLAY_NAME VARCHAR2(100), DESCRIPTION VARCHAR2(200), OBJ_LINK VARCHAR2(100), CONSTRAINT ALLELE_PK PRIMARY KEY (ALLELE_ID) , CONSTRAINT ALLELE_UK UNIQUE (format_name) ) TABLESPACE DATA1;
DROP SEQUENCE ALLELE_SEQ;
CREATE SEQUENCE ALLELE_SEQ;
DROP TRIGGER ALLELE_TRIGGER;
--/
CREATE TRIGGER ALLELE_TRIGGER
BEFORE INSERT ON allele
FOR EACH ROW
BEGIN
SELECT allele_seq.nextval INTO :new.allele_id FROM DUAL;
END;
/

DROP TABLE PHENOTYPEBIOCONCEPT;
CREATE TABLE PHENOTYPEBIOCONCEPT ( BIOCONCEPT_ID INTEGER NOT NULL, PHENOTYPE_TYPE VARCHAR2(20), DIRECT_GENE_COUNT INTEGER, MUTANT_TYPE VARCHAR2(50), QUALIFIER VARCHAR2(50), OBSERVABLE VARCHAR2(250), CONSTRAINT PHENOTYPEBIOCONCEPT_PK PRIMARY KEY (BIOCONCEPT_ID), CONSTRAINT PHENOTYPEBIOCONCEPT_UK UNIQUE (MUTANT_TYPE, QUALIFIER, OBSERVABLE) ) TABLESPACE DATA1;
ALTER TABLE PHENOTYPEBIOCONCEPT ADD CONSTRAINT PHENO_FK FOREIGN KEY (BIOCONCEPT_ID) REFERENCES BIOCONCEPT (BIOCONCEPT_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;

DROP TABLE PHENOTYPEEVIDENCE;
CREATE TABLE PHENOTYPEEVIDENCE ( EVIDENCE_ID INTEGER NOT NULL, MUTANT_TYPE VARCHAR2(100), QUALIFIER VARCHAR2(240), ALLELE_ID INTEGER, REPORTER VARCHAR2(100), REPORTER_DESC VARCHAR2(200), STRAIN_DETAILS VARCHAR2(100), CONDITIONS VARCHAR2(200), DETAILS VARCHAR2(500), EXPERIMENT_DETAILS VARCHAR2(200), ALLELE_INFO VARCHAR2(250), BIOENTITY_ID INTEGER, BIOCONCEPT_ID INTEGER, CONSTRAINT PHENOTYPEEVIDENCE_PK PRIMARY KEY (EVIDENCE_ID) ) TABLESPACE DATA1;
ALTER TABLE PHENOTYPEEVIDENCE ADD CONSTRAINT PHENOEV_FK FOREIGN KEY (EVIDENCE_ID) REFERENCES EVIDENCE (EVIDENCE_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;
ALTER TABLE PHENOTYPEEVIDENCE ADD CONSTRAINT PHENOEV_BIOENT_FK FOREIGN KEY (BIOENTITY_ID) REFERENCES BIOENTITY (BIOENTITY_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;
ALTER TABLE PHENOTYPEEVIDENCE ADD CONSTRAINT PHENOEV_PHENOTYPE_FK FOREIGN KEY (BIOCONCEPT_ID) REFERENCES PHENOTYPEBIOCONCEPT (BIOCONCEPT_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;
ALTER TABLE PHENOTYPEEVIDENCE ADD CONSTRAINT PHENOEV_ALLELE_FK FOREIGN KEY (ALLELE_ID) REFERENCES ALLELE (ALLELE_ID) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE;;

